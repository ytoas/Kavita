
name: Nightly Workflow

on:
  push:
    branches: [ 'develop', '!release/**' ]
  workflow_dispatch:

jobs:
  build:
    name: Build Nightly Docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: NodeJS to Compile WebUI
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          cd UI/Web || exit
          echo 'Installing web dependencies'
          npm ci
          echo 'Building UI'
          npm run prod
          echo 'Copying back to Kavita wwwroot'
          rsync -a dist/ ../../API/wwwroot/
          cd ../ || exit
      - name: Get csproj Version
        uses: kzrnm/get-net-sdk-project-versions-action@v2
        id: get-version
        with:
          proj-path: Kavita.Common/Kavita.Common.csproj

      - name: Compile dotnet app
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.0.x

      - name: Install Swashbuckle CLI
        run: dotnet tool install -g --version 6.5.0 Swashbuckle.AspNetCore.Cli

      - run: ./monorepo-build.sh 

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ytosa/kavita:latest, ytosa/kavita:latest-${{ steps.get-version.outputs.assembly-version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
